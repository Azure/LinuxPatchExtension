[1mdiff --git a/src/extension/src/Utility.py b/src/extension/src/Utility.py[m
[1mindex 90fbb81..9310786 100644[m
[1m--- a/src/extension/src/Utility.py[m
[1m+++ b/src/extension/src/Utility.py[m
[36m@@ -110,8 +110,8 @@[m [mclass Utility(object):[m
         """[m
         Sort paths based on version numbers extracted from folder names.[m
         """[m
[31m-        return sorted([m
[31m-            paths,[m
[31m-            key=lambda path: Utility.extract_version(path),[m
[31m-            reverse=True[m
[31m-        )[m
[32m+[m[32m        def version_key(path):[m
[32m+[m[32m            version_str = Utility.extract_version(path)[m
[32m+[m[32m            return tuple(map(int, version_str.split('.'))) if version_str else (0,0,0)[m
[32m+[m
[32m+[m[32m        return sorted(paths, key=version_key,reverse=True)[m
[1mdiff --git a/src/extension/tests/Test_ActionHandler.py b/src/extension/tests/Test_ActionHandler.py[m
[1mindex 286bcff..d67ac4d 100644[m
[1m--- a/src/extension/tests/Test_ActionHandler.py[m
[1m+++ b/src/extension/tests/Test_ActionHandler.py[m
[36m@@ -196,7 +196,6 @@[m [mclass TestActionHandler(unittest.TestCase):[m
         self.action_handler.ext_env_handler.config_folder = new_version_config_folder[m
         self.action_handler.ext_env_handler.events_folder = test_dir[m
         self.assertTrue(self.action_handler.update() == Constants.ExitCode.Okay)[m
[31m-        print('what is new_version_config_folder', new_version_config_folder)[m
         self.assertTrue(os.path.exists(os.path.join(new_version_config_folder, Constants.CORE_STATE_FILE)))[m
         self.assertTrue(os.path.exists(os.path.join(new_version_config_folder, Constants.EXT_STATE_FILE)))[m
         self.assertTrue(os.path.exists(os.path.join(new_version_config_folder, 'backup.bak')))[m
[36m@@ -249,6 +248,29 @@[m [mclass TestActionHandler(unittest.TestCase):[m
         # Remove the directory after the test[m
         shutil.rmtree(test_dir)[m
 [m
[32m+[m[32m    def test_failed_update_function(self):[m
[32m+[m[32m        events_folder_path_backup = self.action_handler.ext_env_handler.events_folder[m
[32m+[m[32m        # testing with versions 1.6.99 and 1.6.100[m
[32m+[m[32m        # Create a temporary directory[m
[32m+[m[32m        test_dir = tempfile.mkdtemp()[m
[32m+[m[32m        # create extension dir for the latest and other extension versions, to be used in the test[m
[32m+[m[32m        latest_extension_version = 'Microsoft.CPlat.Core.LinuxPatchExtension-1.6.100'[m
[32m+[m[32m        new_version_config_folder = self.create_latest_extension_dir(latest_extension_version, test_dir)[m
[32m+[m[32m        previous_extension_version = 'Microsoft.CPlat.Core.LinuxPatchExtension-1.6.99'[m
[32m+[m[32m        previous_version_config_folder = self.create_previous_extension_version(previous_extension_version, test_dir)[m
[32m+[m[32m        self.action_handler.ext_env_handler.config_folder = new_version_config_folder[m
[32m+[m[32m        self.action_handler.ext_env_handler.events_folder = test_dir[m
[32m+[m[32m        self.assertTrue(self.action_handler.update() == Constants.ExitCode.Okay)[m
[32m+[m[32m        self.assertTrue(os.path.exists(os.path.join(new_version_config_folder, Constants.CORE_STATE_FILE)))[m
[32m+[m[32m        self.assertTrue(os.path.exists(os.path.join(new_version_config_folder, Constants.EXT_STATE_FILE)))[m
[32m+[m[32m        self.assertTrue(os.path.exists(os.path.join(new_version_config_folder, 'backup.bak')))[m
[32m+[m[32m        self.assertFalse(os.path.exists(os.path.join(new_version_config_folder, 'test.txt')))[m
[32m+[m[32m        self.validate_status_file_on_success(self.action_handler.seq_no)[m
[32m+[m[32m        self.action_handler.ext_env_handler.events_folder = events_folder_path_backup[m
[32m+[m[32m        self.runtime.telemetry_writer.events_folder_path = None[m
[32m+[m[32m        # Remove the directory after the test[m
[32m+[m[32m        shutil.rmtree(test_dir)[m
[32m+[m
     def test_update_command_fail(self):[m
         events_folder_path_backup = self.action_handler.ext_env_handler.events_folder[m
         # other versions not found[m
[1mdiff --git a/src/extension/tests/Test_Utility.py b/src/extension/tests/Test_Utility.py[m
[1mindex e77b1ac..0c50e62 100644[m
[1m--- a/src/extension/tests/Test_Utility.py[m
[1m+++ b/src/extension/tests/Test_Utility.py[m
[36m@@ -73,3 +73,8 @@[m [mclass TestUtility(unittest.TestCase):[m
 [m
         # Remove the directory after the test[m
         shutil.rmtree(test_dir)[m
[32m+[m
[32m+[m[32m    def test_extract_version(self):[m
[32m+[m[32m        self.assertEqual(self.utility.extract_version("Microsoft.CPlat.Core.LinuxPatchExtension-1.6.100"), "1.6.100")[m
[32m+[m[32m        self.assertEqual(self.utility.extract_version("Microsoft.CPlat.Core.LinuxPatchExtension-1.6.99"), "1.6.99")[m
[41m+[m
